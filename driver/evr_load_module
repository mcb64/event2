#!/bin/sh
# Set local user group name for device access control
EVR_GROUP=ps-ioc

# Very bad things happen if we already have an EVR driver loaded.
/sbin/rmmod evr_device
/sbin/rmmod pci_mrfevr
/sbin/rmmod pcie_evr

# Find script directory
DRIVERS=`dirname $0`

if [ -f /bin/arch ]; then
    /sbin/insmod $DRIVERS/evr_device.ko.`uname -r`.`arch` || exit 1
else
    /sbin/insmod $DRIVERS/evr_device.ko.`uname -r`.`uname -m` || exit 1
fi

# This script no longer deals w/ EVG devices
# /sbin/modprobe pci_mrfevg

# Search for EVR devices
majors=$(awk "\$2==\"evr_device\" {print \$1}" /proc/devices)
echo "Found" $(echo $majors | wc -w) "Event Receivers."

echo "Creating device nodes..."
umask 022

device=1
for major in $majors; do
    dev=$(echo $device | awk '{ printf "%c", 96+ $1}')
    device=$((++device))
    rm -f /dev/er$dev[0-4]
    echo "Creating nodes /dev/er"$dev"[0-4] for major" $major
    mknod '/dev/er'$dev'0' c $major 0
    mknod '/dev/er'$dev'1' c $major 1
    mknod '/dev/er'$dev'2' c $major 2
    mknod '/dev/er'$dev'3' c $major 3
    mknod '/dev/er'$dev'4' c $major 4

	# Allow members of $EVR_GROUP r/w access to the EVR
    chgrp $EVR_GROUP '/dev/er'$dev[0-4]
    chmod g+w '/dev/er'$dev'3'
    chmod g+w '/dev/er'$dev'4'
done

# This script no longer deals w/ EVG devices
# majors=$(awk "\$2==\"mrfevg\" {print \$1}" /proc/devices)
# 
# echo "Found" $(echo $majors | wc -w) "Event Generators."
# echo "Creating device nodes..."
# 
# device=1
# for major in $majors; do
#     dev=$(echo $device | awk '{ printf "%c", 96+ $1}')
#     device=$((++device))
#     rm -f /dev/eg$dev[0-3]
#     echo "Creating nodes /dev/eg"$dev"[0-3] for major" $major
#     mknod '/dev/eg'$dev'0' c $major 0
#     mknod '/dev/eg'$dev'1' c $major 1
#     mknod '/dev/eg'$dev'2' c $major 2
#     mknod '/dev/eg'$dev'3' c $major 3
#     chgrp ps-ioc '/dev/eg'$dev[0-3]
#     chmod g+w '/dev/eg'$dev'3'
# done

